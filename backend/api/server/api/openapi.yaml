openapi: 3.0.3
info:
  contact:
    email: linofbaoze@outlook.com
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Simple Terms - OpenAPI 3.0
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: localhost:8080
tags:
- description: API calls to Cohere for their LLMs
  name: cohere
paths:
  /cohere/getPractices:
    get:
      description: Pass in
      operationId: getPractices
      parameters:
      - description: Status values that need to be considered for filter
        explode: true
        in: header
        name: document
        required: true
        schema:
          description: Text from any terms of service-esque document
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PracticeList'
                type: array
          description: successful operation
        "400":
          description: Invalid status value
      summary: Gets the poor practices provided a terms of service-esque
      tags:
      - cohere
components:
  schemas:
    Practice:
      properties:
        id:
          example: 1
          format: int64
          type: integer
        practice:
          example: Facebook stores your data whether you have an account or not.
          type: string
        rating:
          description: "Rating from 1 to 3, with 1 being a good practice, 2 being\
            \ normal but not good, 3 being bad"
          format: int64
          type: integer
      type: object
    PracticeList:
      example:
      - id: 1
        practice: Facebook stores your data whether you have an account or not.
        rating: 0
      - id: 2
        practice: Use strong and unique passwords for online accounts.
        rating: 1
      items:
        $ref: '#/components/schemas/Practice'
      type: array
